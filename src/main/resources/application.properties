# Kafka
spring.kafka.properties.bootstrap.servers=localhost:29092
# Schema Registry
spring.kafka.properties.schema.registry.url=http://localhost:8081
# producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
# consumer configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# workaround for protobuf consumer 
spring.kafka.consumer.properties.fetch.max.wait.ms=500 
spring.kafka.consumer.properties.fetch.min.bytes=1 
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.properties.derive.type=true

spring.kafka.streams.application-id=product-catalog
spring.kafka.streams.properties.default.value.serde=io.confluent.kafka.streams.serdes.protobuf.KafkaProtobufSerde
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.cache.max.bytes.buffering=10240
spring.kafka.streams.properties.commit.interval.ms=100
spring.kafka.streams.properties.poll.ms=50
spring.kafka.streams.properties.metadata.max.age.ms=500
spring.kafka.streams.properties.auto.offset.reset=earliest
spring.kafka.streams.properties.metrics.recording.level=DEBUG

server.compression.enabled=true
server.compression.mime-types=application/json,application/x-protobuf